{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","completed","title","cn","TodoList","todos","map","username","prepTodos","userId","usersFromServer","find","App","useState","setTitle","selectedUser","setSelectedUser","setTodos","userError","setUserError","titleError","setTitleError","action","method","onSubmit","event","preventDefault","trim","userName","userToAdd","current","maxTodoId","Math","max","htmlFor","type","placeholder","value","onChange","currentTarget","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30c36bf7.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: FC<Props> = ({\n  user: {\n    name,\n    email,\n  },\n}) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${email}`}\n  >\n    {name}\n  </a>\n);\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUserByName(userName: string): User | null {\n  return usersFromServer.find(user => (user.name === userName)) || null;\n}\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst prepTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId),\n  };\n});\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [todos, setTodos] = useState(prepTodos);\n\n  const [userError, setUserError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n\n  const handleOnTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.currentTarget.value);\n    setTitleError(false);\n  };\n\n  const handleOnUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(event.currentTarget.value);\n    setUserError(false);\n  };\n\n  const handleOnSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setTitleError(!title.trim());\n    setUserError(!selectedUser);\n\n    if (title.trim() === '' || !selectedUser) {\n      return;\n    }\n\n    const userToAdd = getUserByName(selectedUser);\n\n    setTodos(current => {\n      const maxTodoId = Math.max(...current.map(todo => todo.id));\n\n      return [\n        ...current,\n        {\n          id: maxTodoId + 1,\n          title,\n          completed: false,\n          userId: userToAdd ? userToAdd.id : null,\n          user: userToAdd,\n        },\n      ];\n    });\n\n    setTitle('');\n    setSelectedUser('');\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"noise\">\n        <></>\n      </div>\n\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleOnSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            <></>\n          </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter title of task\"\n            value={title}\n            onChange={handleOnTitleChange}\n          />\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label className=\"field__input\" htmlFor=\"title\">\n            <></>\n          </label>\n\n          <select\n            className=\"field__select\"\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"userSelect\"\n            value={selectedUser}\n            onChange={handleOnUserChange}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.name}>{user.name}</option>\n            ))}\n          </select>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          className=\"field__add\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n      <p className=\"result\">My best project!</p>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}